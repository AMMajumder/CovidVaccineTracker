@page "/myalerts"
@using TrackerPortal.Model
@using TrackerPortal.Helper
@inject DialogService DialogBox
<div class="d-flex flex-row justify-content-center align-items-center" style="height:50vh">
    <RadzenTemplateForm TItem="EmailModel" Data=@EmailInfo Submit="SendOTP" Style="width: 60%; background-color: white; outline: auto; outline-color: #575963 ">
        <RadzenFieldset>
            <div class="row mb-3">
                <div class="col-md-4" style="align-self: center;">
                    <RadzenLabel Text="Enter your Email" />
                </div>
                <div class="col">
                    <RadzenTextBox Disabled="OTPSent" style="display: block" Name="Email" @bind-Value=@EmailInfo.To Class="w-100" />
                    <RadzenRequiredValidator Component="@EmailComponentValidation" Text="Email is required" />
                    <RadzenEmailValidator Component="@EmailComponentValidation" Text="Invalid email address" />
                </div>
            </div>
            <div class="row mb-3 @ViewOTPField ">
                <div class="col-md-4" style="align-self: center;">
                    <RadzenLabel Text="Enter secret code" />
                </div>
                <div class="col">
                    <RadzenTextBox style="display: block" Name="Otp" @bind-Value=@EmailInfo.OTP Class="w-100" />
                    <RadzenRequiredValidator Component="@OTPComponentValidation" Text="Please enter the secret code sent to your email" />
                    <div class="@InvalidCodeDisplay" style="color:red;font-size:0.8rem">Invalid code, Please check your inbox and try again</div>
                </div>
            </div>
            <div class="d-flex align-content-between">
                <RadzenButton Visible="!OTPSent" class="w-100" ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Small" ButtonType="ButtonType.Submit" Text="Send secret code" IsBusy="DisableButtons" BusyText="Sending code . . ."></RadzenButton>
                <RadzenButton Visible="OTPSent" class="w-100" ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Small" Text="Proceed" IsBusy="DisableButtons" BusyText="Fetching your details . . ." Click="CheckOTPAndProcess"></RadzenButton>
            </div>
        </RadzenFieldset>
    </RadzenTemplateForm>
</div>
<div>
@foreach(var item in subscriptions)
{
    <ul>
        <li>@item.CenterName</li>
        <li>@item.CenterID</li>
    </ul>
}
</div>
<RadzenDialog></RadzenDialog>

@code {
    public List<SubscriberInfoModel> subscriptions = new List<SubscriberInfoModel>();
    public EmailModel EmailInfo { get; set; } = new EmailModel();
    private bool DisableButtons = false;
    private bool OTPSent = false;
    private string ViewOTPField = "d-none";
    private string InvalidCodeDisplay = "d-none";
    private string OTPComponentValidation = "Email";
    private string EmailComponentValidation = "Email";
    private string EmailSubject = "Secret Code - CoV Tracker";
    private string SecretCode = "";

    protected async Task SendOTP()
    {
        DisableButtons = true;
        await Task.Delay(1);

        SecretCode = new string(System.DateTime.Now.ToString("ddMMyyyyHHmmssfff").Reverse().ToArray()).Substring(0,5);

        EmailInfo.Subject = EmailSubject;
        EmailInfo.Body = $"<b>Secret Code - {SecretCode}<b><div>Regards,</div><div>CoV Tracker Team</div>";
        var result = await RestHelper.SendEmail(EmailInfo);

        OTPSent = true;
        ViewOTPField = "";
        DisableButtons = false;
        OTPComponentValidation = "Otp";
    }
    protected async Task CheckOTPAndProcess()
    {
        InvalidCodeDisplay = "d-none";
        DisableButtons = true;
        await Task.Delay(1);

        //check otp
        if (!EmailInfo.OTP.Equals(SecretCode))
        {
            InvalidCodeDisplay = "d-block";
        }
        else {

            //fetch subscriber details
            subscriptions = await RestHelper.GetSubscription(EmailInfo.To);
        }

        DisableButtons = false;
    }
}
