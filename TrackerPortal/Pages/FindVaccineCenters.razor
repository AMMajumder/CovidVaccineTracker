@page "/"
@page "/findvaccinecenters"
@using TrackerPortal.Model
@using TrackerPortal.Helper
@inject DialogService DialogBox

<div class="d-flex flex-column justify-content-around search-center-wrapper" style="height:70vh">
    <div class="align-self-center text-center search-header">
        <h1>Find vaccine centers</h1>
        <h2>Get a preview of Covid-19 vaccine centers and check availability</h2>
    </div>
    <div class="align-self-center search-body">
        <RadzenTabs>
            <Tabs>
                <RadzenTabsItem Text="By District">

                    <div class="dropdown-wrapper">
                        <div class="flex">
                            <RadzenDropDown Placeholder="Select State" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@StatesList TextProperty="StateName" ValueProperty="StateID" @bind-Value="SelectedState.StateID" Change="PopulateDistricts" />
                        </div>
                        <div>
                            <RadzenDropDown Placeholder="Select District" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@DistrictsList TextProperty="DistrictName" ValueProperty="DistrictID" @bind-Value="SelectedDistrict.DistrictID" />
                        </div>
                    </div>
                    <RadzenDatePicker Placeholder="Choose Appointment Date" TValue="DateTime" @bind-Value="SelectedDate" Style="width:100%" DateFormat="dd-MM-yyyy" />
                    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Text="Find Centers" Style="width:100%" Click="FetchCenters" BusyText="Searching . . ." IsBusy="Searching"></RadzenButton>
                </RadzenTabsItem>
                <RadzenTabsItem Text="By Pin">
                    <h4>This module is not developed yet.</h4>
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>
    </div>
</div>
<hr />
<div class="@GridDisplay mt-4">
    <div class="mb-1"><b>Search Results &nbsp;</b><span style="font-size: 0.8rem; color: #6b7987"> (@CentersCount &nbsp; Center(s) found)</span></div>
    <RadzenDataGrid Data="@CentersList" TItem="@Centers" Count="CentersCount" Style="border: 0px; height:65vh" AllowColumnResize="true"
                    AllowPaging="true" AllowSorting="true" AllowFiltering="true" FilterMode="FilterMode.Simple" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Responsive="true">
        <EmptyTemplate>
            <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 1.5rem;">No centers found.</p>
        </EmptyTemplate>
        <Columns>
            <RadzenDataGridColumn Filterable="true" Sortable="true" TItem="Centers" Property="CenterName" Title="Center Name"></RadzenDataGridColumn>
            <RadzenDataGridColumn Filterable="false" Sortable="true" TItem="Centers" Property="AvailableCapacity" Title="Available"></RadzenDataGridColumn>
            <RadzenDataGridColumn Filterable="false" Sortable="true" TItem="Centers" Property="Vaccine" Title="Vaccine"></RadzenDataGridColumn>
            <RadzenDataGridColumn Filterable="false" Sortable="true" TItem="Centers" Property="FeeType" Title="Fee Type"></RadzenDataGridColumn>
            <RadzenDataGridColumn Width="35%" TextAlign="TextAlign.Center" Filterable="false" TItem="Centers" Sortable="false" Title="ACTIONS">
                <Template Context="rowdata">
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Style="font-size:1rem;" Text="View Details" Click="()=>OpenDetailsScreen(rowdata)"></RadzenButton>
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" Style="font-size: 1rem;" Text="Get Alerts" Click="()=>GetAlerts(rowdata)"></RadzenButton>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>
<div class="mt-4" style="font-size:1rem">
    <b style="color:red">Note:</b>
    <div class="extra-info">The details displayed here are provided the CoWIN</div>
    <div class="extra-info">We do not modify or change any data</div>
</div>
<RadzenDialog></RadzenDialog>


@code{
    public List<States> StatesList { get; set; } = new List<States>();

    public List<Districts> DistrictsList { get; set; } = new List<Districts>();

    public List<Centers> CentersList { get; set; } = new List<Centers>();

    public States SelectedState { get; set; } = new States();

    public Districts SelectedDistrict { get; set; } = new Districts();

    public DateTime SelectedDate { get; set; }

    public int CentersCount { get; set; }

    private string GridDisplay = "d-none";
    private string HideDisplay = "d-none";
    private string BlockDisplay = "d-block";
    private bool Searching = false;

    protected override async Task OnInitializedAsync()
    {
        StatesList = await RestHelper.PopulateStates();
    }
    public async Task PopulateDistricts()
    {
        DistrictsList = await RestHelper.PopulateDistricts(SelectedState.StateID);
    }
    public async Task FetchCenters()
    {
        Searching = true;
        GridDisplay = HideDisplay;
        await Task.Delay(1);
        CentersList = await RestHelper.PopulateCenters(SelectedDistrict.DistrictID, SelectedDate);
        CentersCount = CentersList.Count;
        GridDisplay = BlockDisplay;
        Searching = false;
    }
    public async Task OpenDetailsScreen(Centers center)
    {
        await DialogBox.OpenAsync<CenterDetails>("Details",
                       new Dictionary<string, object>() { { "Center", center } },
                       new DialogOptions() { Width = "auto", Height = "auto", ShowTitle = true, ShowClose = true });
    }
    public async Task GetAlerts(Centers center)
    {
        await DialogBox.OpenAsync<ActivateAlert>("Get Alerts",
                       new Dictionary<string, object>() { { "Center", center } },
                       new DialogOptions() { Width = "auto", Height = "auto", ShowTitle = false, ShowClose = false });
    }
}

