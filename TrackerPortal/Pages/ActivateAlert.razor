@using TrackerPortal.Model
@using TrackerPortal.Helper
@inject DialogService DialogBox

<RadzenTemplateForm TItem="EmailModel" Data=@EmailInfo Submit="SaveCustomerForAlert">
    <RadzenFieldset Text="Enter email">
        <div class="row mb-3">
            <div class="col-md-4" style="align-self: center;">
                <RadzenLabel Text="Email" />
            </div>
            <div class="col">
                <RadzenTextBox style="display: block" Name="Email" @bind-Value=@EmailInfo.To Class="w-100" />
                <RadzenRequiredValidator Component="Email" Text="Email is required" />
                <RadzenEmailValidator Component="Email" Text="Invalid email address" />
            </div>
        </div>
        <div class="d-flex align-content-between">
            <RadzenButton class="mr-3" ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Small" ButtonType="ButtonType.Submit" Text="PROCEED"></RadzenButton>
            <RadzenButton ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Small" Text="CANCEL" Click="CloseEmailDialog"></RadzenButton>
        </div>
    </RadzenFieldset>
</RadzenTemplateForm>

@code {

    [Parameter]
    public Centers Center { get; set; }

    public EmailModel EmailInfo { get; set; } = new EmailModel();

    private string EmailSubject = "CoV Tracker Alert";

    protected override void OnInitialized()
    {
        EmailInfo.Subject = EmailSubject;
    }

    protected async Task SaveCustomerForAlert()
    {
        //save user in db
        EmailInfo.Body = $"<div>Hello {EmailInfo.To.Split('@')[0]},</div>" +
                            $"<div>You will receive daily alerts regarding vaccine slots availability at {Center.CenterName}</div>" +
                            $"<h4>Thank you for subscribing to our notification service</h4>" +
                            $"<br /><br />" +
                            $"<div>Regards,</div>" +
                            $"<div>CoV Tracker Team</div>";

        await RestHelper.SendEmail(EmailInfo);
    }
    protected async Task CloseEmailDialog()
    {
        DialogBox.Close();
    }
}
